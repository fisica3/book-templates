trigger:
  - bicepazdo

variables:
  TestSubscriptionId: "89f21b48-2a5e-477c-ac88-c9cbb8401024"
  TestServiceConnectionName: "scAzureSponsorshipForBicep"

  ProdSubscriptionId: "54a2dff3-7c83-413e-9911-9f21a039e595"
  ProdServiceConnectionName: "scVSSubscriptionForBicep"

  systemName: "uvatm"

stages:
  - stage: build
    displayName: Publish Bicep Files
    jobs:
      - job: publishbicep
        displayName: Publish bicep files as pipeline artifacts
        steps:
          - template: ./templates/transpile-job.yml

  - stage: deployinfratest
    dependsOn: build
    displayName: Deploy to test

    variables:
      environmentName: "test" 

    jobs:
      - job: deploy_us_test              
        displayName: Deploy infra to US region test
        steps:
          - template: ./templates/deploy-arm.yml
            parameters:
              seriviceConnectionName: ${{ variables.TestServiceConnectionName }}
              subscriptionId: ${{ variables.TestSubscriptionId }}
              location: "westus"
              locationAbbriviation: "us"
              environmentName: ${{ variables.environmentName }}
          - task: Bash@3
            name: GetusWebAppId
            displayName: Getting usWebAppId
            inputs:
              targetType: 'inline'
              script: |
               echo "##vso[task.setvariable variable=usWebAppId;isOutput=true;]$(webAppId)"               
#          - task: Bash@3
#            displayName: Output in the same job 1
#            inputs:
#              targetType: inline
#              script: |
#                echo "el Id es = $(GetusWebAppId.usWebAppId)"                

      - job: deploy_eur_test
        displayName: Deploy infra to EUR region test
        dependsOn: deploy_us_test
        steps:
          - template: ./templates/deploy-arm.yml
            parameters:
              seriviceConnectionName: ${{ variables.TestServiceConnectionName }}
              subscriptionId: ${{ variables.TestSubscriptionId }}
              location: "westeurope"
              locationAbbriviation: "we"
              environmentName: ${{ variables.environmentName }}
          - task: Bash@3
            name: GetweWebAppId
            displayName: Getting weWebAppId
            inputs:
              targetType: 'inline'
              script: |
               echo "##vso[task.setvariable variable=weWebAppId;isOutput=true;]$(webAppId)"                

      - job: deploy_asia_test
        displayName: Deploy infra to ASIA region test
        dependsOn: deploy_eur_test
        steps:
          - template: ./templates/deploy-arm.yml
            parameters:
              seriviceConnectionName: ${{ variables.TestServiceConnectionName }}
              subscriptionId: ${{ variables.TestSubscriptionId }}
              location: "eastasia"
              locationAbbriviation: "asi"
              environmentName: ${{ variables.environmentName }}
          - task: Bash@3
            name: GetasiWebAppId
            displayName: Getting asiWebAppId
            inputs:
              targetType: 'inline'
              script: |
               echo "##vso[task.setvariable variable=asiWebAppId;isOutput=true;]$(webAppId)"                            

      - job: deploy_trafficmgr_test
        displayName: Deploy traffic manager test
        dependsOn: 
          - 'deploy_asia_test'
          - 'deploy_eur_test'
          - 'deploy_us_test'
        variables: 
          usWebAppId: $[ dependencies.deploy_us_test.outputs['GetusWebAppId.usWebAppId'] ]
          weWebAppId: $[ dependencies.deploy_eur_test.outputs['GetweWebAppId.weWebAppId'] ]
          asiWebAppId: $[ dependencies.deploy_asia_test.outputs['GetasiWebAppId.asiWebAppId'] ]
        steps:
          - task: Bash@3
            displayName: Output in another job
            inputs:
              targetType: inline
              script: |
                echo "el Asi Id es = $(asiWebAppId)"    
                echo "el We Id es = $(weWebAppId)"      
                echo "el Us Id es = $(usWebAppId)"
          - template: ./templates/traffic-manager.yml
            parameters:
              seriviceConnectionName: ${{ variables.TestServiceConnectionName }}
              subscriptionId: ${{ variables.TestSubscriptionId }}
              location: "westeurope"
              environmentName: ${{ variables.environmentName }}
              usWebAppId: $(usWebAppId)
              weWebAppId: $(weWebAppId)
              asiWebAppId: $(asiWebAppId)
              systemName: ${{ variables.systemName }}


  - stage: deployinfraprod
    dependsOn: deployinfratest
    displayName: Deploy to production

    variables:
      environmentName: "prod"

    jobs:
      - job: deploy_us_prod
        displayName: Deploy infra to US region prod
        steps:
          - template: ./templates/deploy-arm.yml
            parameters:
              seriviceConnectionName: ${{ variables.ProdServiceConnectionName }}
              subscriptionId: ${{ variables.ProdSubscriptionId }}
              location: "westus"
              locationAbbriviation: "us"
              environmentName: ${{ variables.environmentName }}
          - task: Bash@3
            name: GetusWebAppId
            displayName: Getting usWebAppId
            inputs:
              targetType: 'inline'
              script: |
               echo "##vso[task.setvariable variable=usWebAppId;isOutput=true;]$(webAppId)"               
#          - task: Bash@3
#            displayName: Output in the same job 1
#            inputs:
#              targetType: inline
#              script: |
#                echo "el Id es = $(GetusWebAppId.usWebAppId)"                

      - job: deploy_eur_prod
        displayName: Deploy infra to EUR region prod
        dependsOn: deploy_us_prod
        steps:
          - template: ./templates/deploy-arm.yml
            parameters:
              seriviceConnectionName: ${{ variables.ProdServiceConnectionName }}
              subscriptionId: ${{ variables.ProdSubscriptionId }}
              location: "westeurope"
              locationAbbriviation: "we"
              environmentName: ${{ variables.environmentName }}
          - task: Bash@3
            name: GetweWebAppId
            displayName: Getting weWebAppId
            inputs:
              targetType: 'inline'
              script: |
               echo "##vso[task.setvariable variable=weWebAppId;isOutput=true;]$(webAppId)"                 

      - job: deploy_asia_prod
        displayName: Deploy infra to ASIA region prod
        dependsOn: deploy_eur_prod
        steps:
          - template: ./templates/deploy-arm.yml
            parameters:
              seriviceConnectionName: ${{ variables.ProdServiceConnectionName }}
              subscriptionId: ${{ variables.ProdSubscriptionId }}
              location: "eastasia"
              locationAbbriviation: "asi"
              environmentName: ${{ variables.environmentName }}
          - task: Bash@3
            name: GetasiWebAppId
            displayName: Getting asiWebAppId
            inputs:
              targetType: 'inline'
              script: |
               echo "##vso[task.setvariable variable=asiWebAppId;isOutput=true;]$(webAppId)"                

      - job: deploy_trafficmgr_prod
        displayName: Deploy traffic manager Prod
        dependsOn: 
          - 'deploy_asia_prod'
          - 'deploy_eur_prod'
          - 'deploy_us_prod'
        variables: 
          usWebAppId: $[ dependencies.deploy_us_prod.outputs['GetusWebAppId.usWebAppId'] ]
          weWebAppId: $[ dependencies.deploy_eur_prod.outputs['GetweWebAppId.weWebAppId'] ]
          asiWebAppId: $[ dependencies.deploy_asia_prod.outputs['GetasiWebAppId.asiWebAppId'] ]
        steps:
          - template: ./templates/traffic-manager.yml
            parameters:
              seriviceConnectionName: ${{ variables.ProdServiceConnectionName }}
              subscriptionId: ${{ variables.ProdSubscriptionId }}
              location: "westeurope"
              environmentName: ${{ variables.environmentName }}
              usWebAppId: $(usWebAppId)
              weWebAppId: $(weWebAppId)
              asiWebAppId: $(asiWebAppId)    
              systemName: ${{ variables.systemName }}                        

